// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TyreKlicker.Persistence;

namespace TyreKlicker.Persistence.Migrations
{
    [DbContext(typeof(TyreKlickerDbContext))]
    [Migration("20190602200654_AddedStartFinishToAvailabilty")]
    partial class AddedStartFinishToAvailabilty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TyreKlicker.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Postcode");

                    b.Property<bool>("PrimaryAddress");

                    b.Property<string>("Street");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("TyreKlicker.Domain.Entities.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("Finish");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<Guid?>("OrderId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("TyreKlicker.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AcceptedByUserId");

                    b.Property<Guid>("AddressId");

                    b.Property<bool>("Complete");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Registration");

                    b.Property<string>("Trim");

                    b.Property<string>("Tyre");

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedByUserId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("TyreKlicker.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TyreKlicker.Domain.Entities.Address", b =>
                {
                    b.HasOne("TyreKlicker.Domain.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TyreKlicker.Domain.Entities.Availability", b =>
                {
                    b.HasOne("TyreKlicker.Domain.Entities.Order")
                        .WithMany("Availability")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("TyreKlicker.Domain.Entities.Order", b =>
                {
                    b.HasOne("TyreKlicker.Domain.Entities.User", "AcceptedByUser")
                        .WithMany("OrdersAccepted")
                        .HasForeignKey("AcceptedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TyreKlicker.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TyreKlicker.Domain.Entities.User", "CreatedByUser")
                        .WithMany("OrdersCreated")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}

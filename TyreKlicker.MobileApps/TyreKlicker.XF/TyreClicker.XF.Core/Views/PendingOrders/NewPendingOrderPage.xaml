<?xml version="1.0" encoding="utf-8" ?>
<views:MvxContentPage x:TypeArguments="viewModels:NewPendingOrderViewModel"
            xmlns="http://xamarin.com/schemas/2014/forms"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:views="clr-namespace:MvvmCross.Forms.Views;assembly=MvvmCross.Forms"
            xmlns:viewModels="clr-namespace:TyreKlicker.XF.Core.ViewModels;assembly=TyreKlicker.XF.Core"
            xmlns:behaviorsNuget="clr-namespace:Behaviors;assembly=Behaviors"
            xmlns:behaviors="clr-namespace:TyreKlicker.XF.Core.Behaviors;assembly=TyreKlicker.XF.Core"

            x:Class="TyreKlicker.XF.Core.Views.PendingOrders.NewPendingOrderPage">
    <ContentPage.Content>
        <StackLayout>
            <Picker ItemsSource="{Binding Makes}"
                    ItemDisplayBinding="{Binding Name}"
                    Title="Select Make"
                    SelectedItem="{Binding SelectedMake, Mode=TwoWay}">
                <Picker.Behaviors>
                    <behaviorsNuget:EventHandlerBehavior EventName="SelectedIndexChanged">
                        <behaviorsNuget:InvokeCommandAction Command="{Binding GetModelsCommand}" />
                    </behaviorsNuget:EventHandlerBehavior>
                </Picker.Behaviors>
            </Picker>

            <Picker ItemsSource="{Binding Models}"
                    ItemDisplayBinding="{Binding Name}"
                    Title="Select Model"
                    SelectedItem="{Binding SelectedModel, Mode=TwoWay}">
                <Picker.Behaviors>
                    <behaviorsNuget:EventHandlerBehavior EventName="SelectedIndexChanged">
                        <behaviorsNuget:InvokeCommandAction Command="{Binding GetYearsCommand}" />
                    </behaviorsNuget:EventHandlerBehavior>
                </Picker.Behaviors>
            </Picker>

            <Picker ItemsSource="{Binding Years}"
                    ItemDisplayBinding="{Binding Name}"
                    Title="Select Year"
                    SelectedItem="{Binding SelectedYear, Mode=TwoWay}">
                <Picker.Behaviors>
                    <behaviorsNuget:EventHandlerBehavior EventName="SelectedIndexChanged">
                        <behaviorsNuget:InvokeCommandAction Command="{Binding GetVehiclesCommand}" />
                    </behaviorsNuget:EventHandlerBehavior>
                </Picker.Behaviors>
            </Picker>

            <Picker ItemsSource="{Binding Trims}"
                    ItemDisplayBinding="{Binding Trim}"
                    Title="Select Vehicle"
                    SelectedItem="{Binding SelectedVehicleTrim, Mode=TwoWay}">
                <Picker.Behaviors>
                    <behaviorsNuget:EventHandlerBehavior EventName="SelectedIndexChanged">
                        <behaviorsNuget:InvokeCommandAction Command="{Binding GetTyresCommand}" />
                    </behaviorsNuget:EventHandlerBehavior>
                </Picker.Behaviors>
            </Picker>

            <Picker ItemsSource="{Binding Tyres}"
                    ItemDisplayBinding="{Binding Tire}"
                    Title="Select Tyre Size"
                    SelectedItem="{Binding SelectedVehicle, Mode=TwoWay}">
                <Picker.Behaviors>
                    <behaviorsNuget:EventHandlerBehavior EventName="SelectedIndexChanged">
                        <behaviorsNuget:InvokeCommandAction Command="{Binding GetWheelPairsCommand}" />
                    </behaviorsNuget:EventHandlerBehavior>
                </Picker.Behaviors>
            </Picker>

            <Entry Text="{Binding Registration.Value, Mode=TwoWay}">
                <Entry.Style>
                    <OnPlatform x:TypeArguments="Style">
                        <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                    </OnPlatform>
                </Entry.Style>
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior
                        EventName="TextChanged"
                        Command="{Binding ValidateRegistrationCommand}" />
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger
                        TargetType="Entry"
                        Binding="{Binding Registration.IsValid}"
                        Value="False">
                        <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
        </StackLayout>
    </ContentPage.Content>
</views:MvxContentPage>